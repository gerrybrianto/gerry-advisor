{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GooglePlacesService = /*#__PURE__*/(() => {\n  class GooglePlacesService {\n    constructor(http) {\n      this.http = http;\n      this.apiKey = encodeURI('AIzaSyBfDKj0MwI25FL2Az1aJEqO4frIsonndcg');\n      this.signature = encodeURI('kHqEETujCds8Pl7uA_XQg6LPAA4=');\n      this.requestCorsOption = {\n        headers: new HttpHeaders({\n          'Access-Control-Allow-Origin': '*'\n        })\n      };\n    }\n\n    getRestaurants(pos) {\n      const apiURL = `http://localhost:4200/api/place/nearbysearch/json?location=${pos.lat},${pos.lng}&radius=1500&type=restaurant|cafe|food|meal_delivery|meal_takeaway&key=${this.apiKey}`;\n      return this.http.get(apiURL, this.requestCorsOption).pipe(map(response => response.results.map(result => {\n        return {\n          id: result.place_id,\n          restaurantName: result.name,\n          address: result.vicinity,\n          lat: result.geometry.location.lat,\n          long: result.geometry.location.lng,\n          avgRating: result.rating\n        };\n      })));\n    }\n\n    getReviews(id) {\n      const apiURL = `http://localhost:4200/api/place/details/json?fields=rating,review&place_id=${id}&key=${this.apiKey}`;\n      return this.http.get(apiURL, this.requestCorsOption).pipe(map(response => {\n        var _a;\n\n        if ((_a = response.result) === null || _a === void 0 ? void 0 : _a.reviews) {\n          return response.result.reviews.map(review => {\n            return {\n              stars: review.rating,\n              comment: review.text\n            };\n          });\n        } else {\n          return [];\n        }\n      }));\n    }\n\n    getStreetViewImage(pos) {\n      const apiURL = `http://localhost:4200/api/streetview?size=84x88&location=${pos.lat},${pos.lng}&fov=80&heading=70&pitch=0&key=${this.apiKey}`;\n      return this.http.get(apiURL, {\n        responseType: 'blob',\n        headers: new HttpHeaders({\n          'Access-Control-Allow-Origin': '*'\n        })\n      });\n    }\n\n  }\n\n  GooglePlacesService.ɵfac = function GooglePlacesService_Factory(t) {\n    return new (t || GooglePlacesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  GooglePlacesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GooglePlacesService,\n    factory: GooglePlacesService.ɵfac,\n    providedIn: 'root'\n  });\n  return GooglePlacesService;\n})();","map":null,"metadata":{},"sourceType":"module"}